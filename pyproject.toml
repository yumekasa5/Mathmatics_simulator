[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mathematics-simulator"
version = "0.1.0"
description = "3D座標系とアライメントシミュレーションのためのツールセット"
readme = "README.md"
authors = [
    {name = "Developer", email = "developer@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["mathematics", "3d", "coordinates", "simulation", "alignment"]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.20.0",
    "matplotlib>=3.5.0",
    "PySide6>=6.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0"
]

[project.scripts]
coordinate-viewer = "mathematics_simulator.apps.coordinate_3d_viewer:main"
alignment-sim = "mathematics_simulator.apps.alignment_sim:main"

[project.urls]
Homepage = "https://github.com/user/mathematics-simulator"
Documentation = "https://mathematics-simulator.readthedocs.io"
Repository = "https://github.com/user/mathematics-simulator.git"
"Bug Tracker" = "https://github.com/user/mathematics-simulator/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["mathematics_simulator*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py"
]
python_classes = [
    "Test*"
]
python_functions = [
    "test_*"
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
